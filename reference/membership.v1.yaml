openapi: 3.0.0
info:
  title: membership
  version: '1.0'
  description: Odoo Membership API
  contact:
    name: SuuSoJeat
    email: suusojeat@gmail.com
servers:
  - url: 'http://localhost:3000'
paths:
  /memberships:
    post:
      summary: Create a new membership account
      tags:
        - developer
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  registrationID:
                    type: string
                  status:
                    type: string
                required:
                  - registrationID
              examples:
                example-success:
                  value:
                    registrationID: '00001'
                    status: PENDING
      operationId: post-memberships
      description: Creating a new membership account from vKclub app by sending personal information for verification.
      requestBody:
        description: multipart/form-data request body.
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                cardType:
                  type: string
                  enum:
                    - Passport
                    - NationalID
                cardNumber:
                  type: string
                uid:
                  type: string
                  format: uuid
                frontImage:
                  type: string
                  format: binary
                  description: Front image file.
                backImage:
                  type: string
                  format: binary
                  description: Back image file.
                location:
                  type: string
                deviceModel:
                  type: string
                os:
                  type: string
              required:
                - cardType
                - cardNumber
                - uid
                - frontImage
                - backImage
      parameters: []
    get:
      summary: Retrieve Membership Data By ID
      operationId: get-memberships
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  registrationStatus:
                    type: string
                  membershipStatus:
                    type: string
                  level:
                    type: integer
                    format: int32
                    minimum: 0
                  totalBalance:
                    type: integer
                    minimum: 0
                  rewardBalance:
                    type: integer
                    minimum: 0
                  willExpireTomorrowBalance:
                    type: integer
                    minimum: 0
                required:
                  - id
                  - name
                  - registrationStatus
                  - membershipStatus
                  - totalBalance
                  - rewardBalance
                  - willExpireTomorrowBalance
      parameters:
        - schema:
            type: string
          in: query
          name: membershipID
          required: true
      security:
        - accessToken: []
      description: Retrieving the membership data by ID after verified PIN code.
      tags:
        - developer
    parameters: []
components:
  schemas: {}
  securitySchemes:
    accessToken:
      type: http
      scheme: Bearer
      description: Access Token acquired from PIN code verification.
tags:
  - name: developer
    description: API that will be used by developers/client app.
