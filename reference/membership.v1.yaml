openapi: 3.0.0
info:
  title: membership
  version: '1.0'
  description: Odoo Membership API
  contact:
    name: SuuSoJeat
    email: suusojeat@gmail.com
servers:
  - url: 'http://{server_ip}:8069'
    description: Backend Server
paths:
  /memberships:
    post:
      summary: Create a new membership account
      tags:
        - developer
      responses:
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
              examples:
                example-1:
                  value:
                    type: Invalid Payload
                    message: "'cardType' is a required property"
      operationId: post-memberships
      description: Creating a new membership account from vKclub app by sending personal information for verification.
      requestBody:
        description: multipart/form-data request body.
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                cardType:
                  type: string
                  enum:
                    - Passport
                    - NationalID
                cardNumber:
                  type: string
                uid:
                  type: string
                  format: uuid
                location:
                  type: string
                deviceModel:
                  type: string
                os:
                  type: string
                selfieImage:
                  type: string
                  format: binary
                cardImage:
                  type: string
                  format: binary
                  description: Front image file.
              required:
                - cardType
                - cardNumber
                - uid
                - cardImage
                - selfieImage
      parameters: []
      security:
        - Client Id: []
        - Client Token: []
    get:
      summary: Retrieve Membership Data By ID
      operationId: get-memberships
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  registrationStatus:
                    type: string
                  membershipStatus:
                    type: string
                  level:
                    type: integer
                    format: int32
                    minimum: 0
                  totalBalance:
                    type: integer
                    minimum: 0
                  rewardBalance:
                    type: integer
                    minimum: 0
                  willExpireTomorrowBalance:
                    type: integer
                    minimum: 0
                required:
                  - id
                  - name
                  - registrationStatus
                  - membershipStatus
                  - totalBalance
                  - rewardBalance
                  - willExpireTomorrowBalance
              examples:
                example-1:
                  value:
                    id: 81
                    name: Chan Dara
                    membershipStatus: No Status
                    registrationStatus: Approved
                    level: 1
                    totalBalance: 0
                    rewardBalance: 0
                    willExpireTomorrowBalance: 0
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  body:
                    type: string
              examples:
                example-1: {}
      parameters: []
      security:
        - accessToken: []
        - Client Id: []
        - Client Token: []
      description: Retrieving the membership data by ID after verified PIN code.
      tags:
        - developer
    parameters: []
  /memberships/pin/verifications:
    post:
      summary: Verify Membership PIN Code.
      tags:
        - developer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                required:
                  - accessToken
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
              examples:
                example-1:
                  value:
                    type: Mismatch
                    message: Pin does not match with membership id
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
              examples:
                example-1:
                  value:
                    type: Missing ID
                    message: The ID does not exist
      operationId: post-memberships-pin-verifications
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                membershipID:
                  type: string
                pinCode:
                  type: string
                uid:
                  type: string
                deviceToken:
                  type: string
                metaInfo:
                  $ref: '#/components/schemas/MetaInfo'
              required:
                - membershipID
                - pinCode
                - uid
                - deviceToken
                - metaInfo
        description: Verify PIN Code from vKclub.
      description: Verify Membership PIN Code for connection and payment.
      security:
        - Client Id: []
        - Client Token: []
  /memberships/pin/change:
    post:
      summary: Update Membership PIN Code
      tags:
        - developer
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
              examples:
                example-1:
                  value:
                    type: Invalid New PIN
                    message: New PIN and Confirm PIN is not matched
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
              examples:
                example-1:
                  value:
                    type: Incorrect PIN
                    message: Current PIN is invalid
      operationId: post-memberships-pin
      description: Change a new PIN Code using the current PIN.
      security:
        - accessToken: []
        - Client Id: []
        - Client Token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                currentPinCode:
                  type: string
                newPinCode:
                  type: string
                cfmNewPinCode:
                  type: string
              required:
                - currentPinCode
                - newPinCode
                - cfmNewPinCode
        description: Change a new PIN Code from vKclub.
    parameters: []
  /memberships/transactions:
    get:
      summary: Listing all transactions of a membership account.
      tags:
        - developer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
              examples:
                example-1:
                  value:
                    type: Missing ID
                    message: The ID does not exist
      operationId: get-memberships-transactions
      description: 'Listing of all transactions belong to a membership account with the specified {membershipID}'
      security:
        - accessToken: []
        - Client Id: []
        - Client Token: []
      parameters:
        - schema:
            type: string
          in: query
          name: membershipID
          required: true
  /memberships/registrations/info:
    get:
      summary: Get registration info by registrationID
      tags:
        - developer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  registrationStatus:
                    type: string
                  email:
                    type: string
                  phoneNumber:
                    type: string
                  rejectedReason:
                    type: string
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
              examples:
                example-1:
                  value:
                    type: Missing ID
                    message: The ID does not exist
      operationId: get-memberships-registrations-info
      description: Retrieve registration info.
      security:
        - Client Id: []
        - Client Token: []
      parameters:
        - schema:
            type: string
          in: query
          name: registrationID
          required: true
  '/payments/orders/{purchaseId}':
    get:
      summary: Get order info with orderID.
      tags:
        - developer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            application/xml:
              schema:
                type: object
                properties:
                  '':
                    type: string
            multipart/form-data:
              schema:
                type: object
                properties:
                  '':
                    type: string
            text/html:
              schema:
                type: object
                properties: {}
        '404':
          description: Could not find the order
      operationId: get-payments-orders
      description: Retrieve order info from Odoo with an orderID.
      security:
        - Client Id: []
        - Client Token: []
        - accessToken: []
      parameters: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
            examples: {}
        description: 'Information embbed in QR code format: <purchaseId>'
    parameters:
      - schema:
          type: string
        name: purchaseId
        in: path
        required: true
  /memberships/pin/reset:
    post:
      summary: Reset PIN.
      tags:
        - developer
      responses:
        '200':
          description: OK
      operationId: post-memberships-pin-reset
      description: Reset PIN Code when user forget.
      security:
        - accessToken: []
        - Client Id: []
        - Client Token: []
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                newPin:
                  type: string
                cfmNewPin:
                  type: string
  /client_token:
    get:
      summary: Get Client Token
      tags:
        - developer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  clientToken:
                    type: string
                  expireAt:
                    type: string
                    format: date-time
                    example: "'%d-%m-%Y %H:%M:%S"
                required:
                  - clientToken
              examples: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
                required:
                  - message
              examples: {}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
                required:
                  - message
      operationId: get-client_token
      description: Request to generate new client-token
      security:
        - Client Id: []
        - Secret Key: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties: {}
  /payments/pay:
    post:
      summary: Commit Payment
      tags:
        - developer
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
      operationId: post-payments-pay
      security:
        - accessToken: []
        - Client Id: []
        - Client Token: []
      description: Confirm to make payment after PIN Code verifcation successful.
      requestBody:
        description: Contained orderID to pay for.
        content:
          application/json:
            schema:
              type: object
              properties:
                purchaseId:
                  type: string
                total:
                  type: string
      parameters: []
    parameters: []
  '/memberships/{membershipID}':
    get:
      summary: Get public membership info
      tags:
        - developer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  phonNumber:
                    type: string
                  name:
                    type: string
                  email:
                    type: string
              examples:
                sample:
                  value:
                    id: 81
                    phoneNumber: '+85510657939'
                    email: hoeurnghen17@kit.edu.kh
                    name: Chan Dara
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
              examples:
                example-1:
                  value:
                    type: Missing ID
                    message: The ID does not exist
      operationId: 'get-memberships-membershipID:string'
      description: Provide public info of membership wihout Access Token requirement.
      security:
        - Client Id: []
        - Client Token: []
      requestBody: {}
      parameters:
        - schema:
            type: string
          in: query
          name: membershipID
          description: membershipID
          required: true
    parameters:
      - schema:
          type: string
        name: membershipID
        in: path
        required: true
components:
  schemas:
    MetaInfo:
      title: MetaInfo
      type: object
      x-tags:
        - developer
      properties:
        location:
          type: string
        deviceModel:
          type: string
        os:
          type: string
      description: "User's data used for analytics purpose."
    Order:
      title: Order
      type: object
      x-tags:
        - developer
      description: Order detail to be displayed to user before confirming purchase.
      properties:
        purchaseId:
          type: string
        vendor:
          type: string
        items:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              unitPrice:
                type: number
              qty:
                type: number
              discount:
                type: number
              subtotal:
                type: number
        totalNoVat:
          type: number
        vat:
          type: number
        total:
          type: number
    Transaction:
      title: Transaction
      type: object
      x-tags:
        - developer
      description: Model for membership balance transactions.
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - payment
            - reward
            - allocation
            - top up
        transactionDate:
          type: string
          format: date-time
        expireDate:
          type: string
          format: date-time
        remark:
          type: string
        amount:
          type: number
        sender:
          type: string
        receiver:
          type: string
        refNumber:
          type: string
      required:
        - id
        - type
        - transactionDate
        - expireDate
        - amount
        - sender
        - receiver
        - refNumber
  securitySchemes:
    accessToken:
      type: http
      scheme: bearer
    Client Token:
      name: client_token
      type: apiKey
      in: header
    Client Id:
      name: client_id
      type: apiKey
      in: header
      description: ''
    Secret Key:
      name: secret_key
      type: apiKey
      in: header
tags:
  - name: developer
    description: API that will be used by developers/client app.
